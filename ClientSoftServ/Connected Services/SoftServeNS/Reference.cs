//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientSoftServ.SoftServeNS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Swarschik", Namespace="http://schemas.datacontract.org/2004/07/WcfKnownTypes")]
    [System.SerializableAttribute()]
    public partial class Swarschik : ClientSoftServ.SoftServeNS.Worker {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ElektrodQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSwarkaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ElektrodQuantity {
            get {
                return this.ElektrodQuantityField;
            }
            set {
                if ((this.ElektrodQuantityField.Equals(value) != true)) {
                    this.ElektrodQuantityField = value;
                    this.RaisePropertyChanged("ElektrodQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSwarka {
            get {
                return this.HasSwarkaField;
            }
            set {
                if ((this.HasSwarkaField.Equals(value) != true)) {
                    this.HasSwarkaField = value;
                    this.RaisePropertyChanged("HasSwarka");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Worker", Namespace="http://schemas.datacontract.org/2004/07/WcfKnownTypes")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientSoftServ.SoftServeNS.Yborschik))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientSoftServ.SoftServeNS.Santechnik))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientSoftServ.SoftServeNS.Swarschik))]
    public partial class Worker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Yborschik", Namespace="http://schemas.datacontract.org/2004/07/WcfKnownTypes")]
    [System.SerializableAttribute()]
    public partial class Yborschik : ClientSoftServ.SoftServeNS.Worker {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DlinaMitluField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMitlaOwnerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DlinaMitlu {
            get {
                return this.DlinaMitluField;
            }
            set {
                if ((this.DlinaMitluField.Equals(value) != true)) {
                    this.DlinaMitluField = value;
                    this.RaisePropertyChanged("DlinaMitlu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMitlaOwner {
            get {
                return this.IsMitlaOwnerField;
            }
            set {
                if ((this.IsMitlaOwnerField.Equals(value) != true)) {
                    this.IsMitlaOwnerField = value;
                    this.RaisePropertyChanged("IsMitlaOwner");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Santechnik", Namespace="http://schemas.datacontract.org/2004/07/WcfKnownTypes")]
    [System.SerializableAttribute()]
    public partial class Santechnik : ClientSoftServ.SoftServeNS.Worker {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRazvodnujKeyOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVantuzOwnerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRazvodnujKeyOwner {
            get {
                return this.IsRazvodnujKeyOwnerField;
            }
            set {
                if ((this.IsRazvodnujKeyOwnerField.Equals(value) != true)) {
                    this.IsRazvodnujKeyOwnerField = value;
                    this.RaisePropertyChanged("IsRazvodnujKeyOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVantuzOwner {
            get {
                return this.IsVantuzOwnerField;
            }
            set {
                if ((this.IsVantuzOwnerField.Equals(value) != true)) {
                    this.IsVantuzOwnerField = value;
                    this.RaisePropertyChanged("IsVantuzOwner");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftServeNS.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWorkersQuantity", ReplyAction="http://tempuri.org/IService1/GetWorkersQuantityResponse")]
        int GetWorkersQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWorkersQuantity", ReplyAction="http://tempuri.org/IService1/GetWorkersQuantityResponse")]
        System.Threading.Tasks.Task<int> GetWorkersQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRichestWorkerName", ReplyAction="http://tempuri.org/IService1/GetRichestWorkerNameResponse")]
        string GetRichestWorkerName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRichestWorkerName", ReplyAction="http://tempuri.org/IService1/GetRichestWorkerNameResponse")]
        System.Threading.Tasks.Task<string> GetRichestWorkerNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHighestSalary", ReplyAction="http://tempuri.org/IService1/GetHighestSalaryResponse")]
        decimal GetHighestSalary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHighestSalary", ReplyAction="http://tempuri.org/IService1/GetHighestSalaryResponse")]
        System.Threading.Tasks.Task<decimal> GetHighestSalaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWorkersQuantityByName", ReplyAction="http://tempuri.org/IService1/GetWorkersQuantityByNameResponse")]
        int GetWorkersQuantityByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWorkersQuantityByName", ReplyAction="http://tempuri.org/IService1/GetWorkersQuantityByNameResponse")]
        System.Threading.Tasks.Task<int> GetWorkersQuantityByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTop3SwarschiksBySalary", ReplyAction="http://tempuri.org/IService1/GetTop3SwarschiksBySalaryResponse")]
        ClientSoftServ.SoftServeNS.Swarschik[] GetTop3SwarschiksBySalary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTop3SwarschiksBySalary", ReplyAction="http://tempuri.org/IService1/GetTop3SwarschiksBySalaryResponse")]
        System.Threading.Tasks.Task<ClientSoftServ.SoftServeNS.Swarschik[]> GetTop3SwarschiksBySalaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTop5WorkersBySalary", ReplyAction="http://tempuri.org/IService1/GetTop5WorkersBySalaryResponse")]
        ClientSoftServ.SoftServeNS.Worker[] GetTop5WorkersBySalary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTop5WorkersBySalary", ReplyAction="http://tempuri.org/IService1/GetTop5WorkersBySalaryResponse")]
        System.Threading.Tasks.Task<ClientSoftServ.SoftServeNS.Worker[]> GetTop5WorkersBySalaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ExceptionGenerator", ReplyAction="http://tempuri.org/IService1/ExceptionGeneratorResponse")]
        void ExceptionGenerator();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ExceptionGenerator", ReplyAction="http://tempuri.org/IService1/ExceptionGeneratorResponse")]
        System.Threading.Tasks.Task ExceptionGeneratorAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClientSoftServ.SoftServeNS.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClientSoftServ.SoftServeNS.IService1>, ClientSoftServ.SoftServeNS.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetWorkersQuantity() {
            return base.Channel.GetWorkersQuantity();
        }
        
        public System.Threading.Tasks.Task<int> GetWorkersQuantityAsync() {
            return base.Channel.GetWorkersQuantityAsync();
        }
        
        public string GetRichestWorkerName() {
            return base.Channel.GetRichestWorkerName();
        }
        
        public System.Threading.Tasks.Task<string> GetRichestWorkerNameAsync() {
            return base.Channel.GetRichestWorkerNameAsync();
        }
        
        public decimal GetHighestSalary() {
            return base.Channel.GetHighestSalary();
        }
        
        public System.Threading.Tasks.Task<decimal> GetHighestSalaryAsync() {
            return base.Channel.GetHighestSalaryAsync();
        }
        
        public int GetWorkersQuantityByName(string name) {
            return base.Channel.GetWorkersQuantityByName(name);
        }
        
        public System.Threading.Tasks.Task<int> GetWorkersQuantityByNameAsync(string name) {
            return base.Channel.GetWorkersQuantityByNameAsync(name);
        }
        
        public ClientSoftServ.SoftServeNS.Swarschik[] GetTop3SwarschiksBySalary() {
            return base.Channel.GetTop3SwarschiksBySalary();
        }
        
        public System.Threading.Tasks.Task<ClientSoftServ.SoftServeNS.Swarschik[]> GetTop3SwarschiksBySalaryAsync() {
            return base.Channel.GetTop3SwarschiksBySalaryAsync();
        }
        
        public ClientSoftServ.SoftServeNS.Worker[] GetTop5WorkersBySalary() {
            return base.Channel.GetTop5WorkersBySalary();
        }
        
        public System.Threading.Tasks.Task<ClientSoftServ.SoftServeNS.Worker[]> GetTop5WorkersBySalaryAsync() {
            return base.Channel.GetTop5WorkersBySalaryAsync();
        }
        
        public void ExceptionGenerator() {
            base.Channel.ExceptionGenerator();
        }
        
        public System.Threading.Tasks.Task ExceptionGeneratorAsync() {
            return base.Channel.ExceptionGeneratorAsync();
        }
    }
}
